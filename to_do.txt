- linked allocation
- index allocation
- disk is a txt file
- blocks linked initially not seperately for free blocks
- design of terminal contains: help, ls, cd, cp, rm, mv, cat, mkdir, dh, du, touch, and nano
- user can create text file and put text inside
	- text file would show text user made, and how much space the file takes up in memory
- to display memory, use bitmap or file allocation table
---------------------------------------------------------------------
help - shows all commands
pwd - shows full path (~/home/username)
ls - shows all files in directory
du - displays memory amount
mkdir - create directory
rmdir - remove directory
cd - move directory (or home/root)
create - create file
write - write file
read - reads file
---------------------------------------------------------------------
512 max memory
15 size blocks
---------------------------------------------------------------------
- fat is empty with address to empty free space.
- create file "f1" that contains "hello world" with 2 blocks
- every block is 15 characters max
- so f1 and starting address
- pop free space and assign first block tro
???
how to link list:
how to point towards another block:
store data and address,
???
initialization:
- have fat, and every block has address near end that links towards block
- address of first block is x and is free space
- pop 2nd bloc
- dont do contioguous allkocaiton
---------------------------------------------------------------------
FILE SYSTEM MUST:
-which blocks belong to which files.
-in what order the blocks form the file.
-which blocks are free for allocation.
--------------------------------------------------------------------------
- create linked lists for file contents
- create hashmap for FAT table
ca
--------------------------------------------------------------------------
LINKED LISTS ok
HASHMAPS
VECTOR
FSTREAM ok
PUBLIC VS PRIVATE ok
INITIATION 
STRINGS AND ARRAYS